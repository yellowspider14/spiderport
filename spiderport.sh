#!/bin/bash

#Thanks for choosing spiderport.
#This script created by yellowspiderüï∑Ô∏è.
#This script performs a TCP port scan on a target IP address over a specified port range.

#Features:
#		-Uses `nc` (netcat) for scanning and saves the results in a file named scan_<IP>.txt.
#		- Displays the total number of open ports found.

# Usage:
#   	- Run the script and enter the target IP and port range .
# 		- View the scan results in the generated `scan_<IP>.txt` file.



#banner
banner(){
echo -e "\e[32m	
														
  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñì‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñì‚ñà‚ñà‚ñà   ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà  ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì
‚ñí‚ñà‚ñà    ‚ñí ‚ñì‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñÄ ‚ñà‚ñà‚ñå‚ñì‚ñà   ‚ñÄ ‚ñì‚ñà‚ñà ‚ñí ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà ‚ñí ‚ñà‚ñà‚ñí‚ñì  ‚ñà‚ñà‚ñí ‚ñì‚ñí
‚ñë ‚ñì‚ñà‚ñà‚ñÑ   ‚ñì‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñì‚ñí‚ñí‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà   ‚ñà‚ñå‚ñí‚ñà‚ñà‚ñà   ‚ñì‚ñà‚ñà ‚ñë‚ñÑ‚ñà ‚ñí‚ñì‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñì‚ñí‚ñí‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà ‚ñë‚ñÑ‚ñà ‚ñí‚ñí ‚ñì‚ñà‚ñà‚ñë ‚ñí‚ñë
  ‚ñí   ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñÑ‚ñà‚ñì‚ñí ‚ñí‚ñë‚ñà‚ñà‚ñë‚ñë‚ñì‚ñà‚ñÑ   ‚ñå‚ñí‚ñì‚ñà  ‚ñÑ ‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñÑ  ‚ñí‚ñà‚ñà‚ñÑ‚ñà‚ñì‚ñí ‚ñí‚ñí‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñÑ  ‚ñë ‚ñì‚ñà‚ñà‚ñì ‚ñë 
‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñà‚ñà‚ñí ‚ñë  ‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñí ‚ñë  ‚ñë‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñë‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñí  ‚ñí‚ñà‚ñà‚ñí ‚ñë 
‚ñí ‚ñí‚ñì‚ñí ‚ñí ‚ñë‚ñí‚ñì‚ñí‚ñë ‚ñë  ‚ñë‚ñë‚ñì   ‚ñí‚ñí‚ñì  ‚ñí ‚ñë‚ñë ‚ñí‚ñë ‚ñë‚ñë ‚ñí‚ñì ‚ñë‚ñí‚ñì‚ñë‚ñí‚ñì‚ñí‚ñë ‚ñë  ‚ñë‚ñë ‚ñí‚ñë‚ñí‚ñë‚ñí‚ñë ‚ñë ‚ñí‚ñì ‚ñë‚ñí‚ñì‚ñë  ‚ñí ‚ñë‚ñë   
‚ñë ‚ñë‚ñí  ‚ñë ‚ñë‚ñë‚ñí ‚ñë      ‚ñí ‚ñë ‚ñë ‚ñí  ‚ñí  ‚ñë ‚ñë  ‚ñë  ‚ñë‚ñí ‚ñë ‚ñí‚ñë‚ñë‚ñí ‚ñë       ‚ñë ‚ñí ‚ñí‚ñë   ‚ñë‚ñí ‚ñë ‚ñí‚ñë    ‚ñë    
‚ñë  ‚ñë  ‚ñë  ‚ñë‚ñë        ‚ñí ‚ñë ‚ñë ‚ñë  ‚ñë    ‚ñë     ‚ñë‚ñë   ‚ñë ‚ñë‚ñë       ‚ñë ‚ñë ‚ñë ‚ñí    ‚ñë‚ñë   ‚ñë   ‚ñë      
      ‚ñë            ‚ñë     ‚ñë       ‚ñë  ‚ñë   ‚ñë                  ‚ñë ‚ñë     ‚ñë              
                       ‚ñë                                                          
	*******************************************************
		 üï∑Ô∏è Welcome To ùñòùñïùñéùñâùñäùñóùñïùñîùñóùñô $verüï∑Ô∏è
		   üï∑Ô∏è Built by yellowspiderüï∑Ô∏è
	********************************************************	\e[0m"      
echo                                     
}

#input valideations through switches


if [[ "$2" == "-p" && "$4" == "-e"  ]]; then
	targip=$1
	sport=$3
	eport=$5
elif [[ "$2" == "-p"  ]]; then
	targip=$1
	sport=$3
	eport=$3
elif [[ "$1" == "-h" ]];then
	banner
	echo -e "	Welcome to help menu for spider port
	\e[32m***************************************\e[0m"
	echo
	echo -e "\e[32m-h\e[0m	: help menu"
	echo -e "\e[32m-p	\e[0m: starting /single port number"
	echo -e "\e[32m-e	\e[0m: ending port number"
	echo -e "\e[32musage\e[0m"	
	echo "	 $0 [target_ip] -p [starting_port] -e [ending_port] "
	echo "	 $0 [target_ip] -p [single_port]"
	echo "	 $0 -h "
	exit 1

else
	banner
	echo -e "\e[32musage\e[0m"
	echo "	 $0 [target_ip] -p [starting_port] -e [ending_port] "
	echo "	 $0 [target_ip] -p [single_port]"
	echo "	 $0 -h "
	exit 1
	
fi


#version
ver=v2.25.3



banner		



#input details
input(){ echo "$1" 
read -p "Enter target ip:" targip
read -p "Starting prot number:" sport 
read -p "Ending port number:" eport
}

#scanning
port_scanning(){
output="scan_${targip}.txt"
echo
echo
echo "starting port scan for $targip "
echo
nc -zv $targip $sport-$eport > $output 2>&1
}

port_scanning

error(){
#filteringout error
sed -e 's/(UNKNOWN)//g' -e 's/\[//g' -e 's/\]//g' $output > temp.txt && mv temp.txt $output
}
error



#output
out(){
cat $output | sed 's/open/\x1b[32mopen\x1b[0m/g'
echo
grep "open" -i $output | wc -l > open.txt
echo
echo -e "found \e[32m$(cat open.txt)\e[0m open ports on $targip....." 
rm open.txt
echo
echo "result saved into $output"
echo 
echo -e "scanning complete......................."
echo
echo -e	"\e[32m***********************************\e[0m"
echo
}
out


#close script

close(){
echo -e " 		üï∑Ô∏è\e[32m Thanks for using spiderport $ver\e[0m"üï∑Ô∏è
echo -e "	\e[32m********************************************************\e[0m"
}


#continue wtih scan for another target
another(){
read -p $'\e[32m do you want to scan another target?(y/n): \e[0m' yn
	echo
yn=$(echo "$yn" | tr '[:upper:]' '[:lower:]') #to fix case error
if [[ "$yn" == "y" ]];then
	echo	
	echo -e "\e[32mstarting new scan_________\e[0m"
	echo
	
	banner #restarting the script for new scan
	input 
	port_scanning
	error
	out
	another
	
else
	close
fi
}
another




